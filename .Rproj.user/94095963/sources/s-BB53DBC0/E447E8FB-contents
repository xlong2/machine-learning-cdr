library(ggplot2)
library(gridExtra)
library(reshape2)
library(grid)
data_by_loop_type_list_unduplicated=readRDS("./proline_classifier/data_by_loop_type_list_unduplicated_no_filtering.rds")

#make a plot of the the data
loop_distribution=lapply(data_by_loop_type_list_unduplicated,function(x){a=as.data.frame(table(x[[1]]$cluster_type)); 
k=a[order(a$Freq,decreasing=TRUE),]; gg=paste(strsplit(as.character(x[[1]][1,"loop_type"]),"_")[[1]][1:2],collapse="_"); k$loop=rep(gg,length(gg)); 
total=0

;return(k)})
loop_distribution_total=do.call(rbind,loop_distribution)



loop_distribution_total=melt(loop_distribution_total,id.var=c("Var1","loop"))
loop_distribution_total$Var1=as.character(loop_distribution_total$Var1)

#  factor(loop_distribution_total$Var1,levels=c("1" ,  "2" , "3","4", "5" ,"6" ,"7","8",    "9",  "10", "11",  "cis6-1",   "cis7-1",   "cis7-2",    "cis7-3" ,  "cis7,8-1" ,"cis8-1" ,  "cis9-1"  , "none"))
names(loop_distribution_total)=c("cluster_identifier","loop","variable","case_number")
#names(loop_distribution_total)=c("cluster_identifier","case_number","loop")

# plot the loop distribution
loop_distribution_total$loop_type=sapply(strsplit(loop_distribution_total$loop,"_"),"[[",1)

loop_distribution_total=do.call(rbind,lapply(split(loop_distribution_total,loop_distribution_total$loop_type),function(x){
  x$dim=rep(dim(x)[1],dim(x)[1]);return(x)}))





loop_distribution_total$cluster_identifier=as.factor(loop_distribution_total$cluster_identifier)
splitted_loop=split(loop_distribution_total,loop_distribution_total$loop)
splitted_loop_large=split(loop_distribution_total,loop_distribution_total$loop_type)

loop_distribution_total$looplength=as.numeric(sapply(strsplit(as.character(loop_distribution_total$loop),"_"),"[[",2))

# generate colors
library(RColorBrewer)
n <- length(unique(loop_distribution_total$cluster_identifier))+1
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector=col_vector[c(1:3,5:n)]
pie(rep(1,n-1), col=col_vector)
names(col_vector) <- as.character(unique(loop_distribution_total$cluster_identifier))


# extract legend
loop_distribution_total$cluster_identifier=
  
  factor(loop_distribution_total$cluster_identifier,levels=c(levels(loop_distribution_total$cluster_identifier)[2:length(levels(loop_distribution_total$cluster_identifier))],"*"))
plot=ggplot(loop_distribution_total)+facet_wrap(~loop_type, scales = "free" )+ 
  geom_bar(aes(x=loop,y=case_number,fill=cluster_identifier,width=0.8),position =  position_dodge(width = 0.90),stat = "identity",size=0.2)+ 
  
  ggtitle("Canonical cdr loop cluster distribution")+theme(plot.title = element_text(hjust = 0.5))


plot=ggplot(data=loop_distribution_total) +
  geom_bar(stat = "identity", aes(x = loop, y = case_number, fill=cluster_identifier,width=1 ),position=position_dodge(width = 0.90))+
  facet_grid(~loop_type,scales = "free", space="free")+scale_fill_manual("Legend", values = col_vector)+
  labs(cluster_identifier="loop&length type")+   guides(fill=guide_legend(title="Cluster identifier"))# add guide properties by aesthetic#Extract Legend 
g_legend<-function(a.gplot){ 
  tmp <- ggplot_gtable(ggplot_build(a.gplot)) 
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box") 
  legend <- tmp$grobs[[leg]] 
  return(legend)} 

legend <- g_legend(plot)
legend_plot=grid.draw(legend)

loop_distribution_total_list=list()
loop_distribution_total_list=split(loop_distribution_total,loop_distribution_total$loop_type)
loop_distribution_total_list[[1]]=do.call(rbind,splitted_loop[1:4])
loop_distribution_total_list[[2]]=do.call(rbind,splitted_loop[5:12])
loop_distribution_total_list[[3]]=do.call(rbind,splitted_loop[13:19])



figure_dim_list=list(list(62,42),list(57,42),list(90,42),list(22,42),list(70,42))
loop_list=as.list(names(loop_distribution_total_list))

for(index in 1:5){
  dim_f=figure_dim_list[[index]]
  the_data=loop_distribution_total_list[[index]]
  the_data=the_data[order(the_data$looplength),]
  the_data$cluster_identifier=factor(the_data$cluster_identifier,levels=c(levels(the_data$cluster_identifier)[2:length(levels(the_data$cluster_identifier))],"*"))
  aa=ggplot(data=the_data) +
    geom_bar(stat = "identity", aes(x = cluster_identifier, y = case_number, fill=cluster_identifier) ,position=position_dodge(width = 0.90))+
    facet_grid(~looplength,scales = "free_x", space="free")+ 
    theme(
      strip.text.x = element_text(size = 11, colour = "black"),
      plot.margin=unit(c(2,0,0,2),"mm"),axis.title.x=element_blank(),
      axis.title.y=element_blank(),axis.text.x=element_blank(),axis.ticks.x = element_blank(), axis.text.y = element_text(size=9)) +
    scale_fill_manual("Legend", values = col_vector)+ theme(legend.position = "none")
  system("mkdir ./proline_classifier/Plots/")
  file_name=paste(c("./proline_classifier/Plots/member_distribution_plot.",loop_list[[index]],".pdf"),collapse="")
  ggsave(aa,file=file_name, width=dim_f[[1]],height=dim_f[[2]],units = c( "mm"))
  
  }

girds=lapply(loop_distribution_total_list,function(x){
  ggplot(data=x) +
    geom_bar(stat = "identity", aes(x = cluster_identifier, y = case_number, fill=cluster_identifier) ,position=position_dodge(width = 0.90))+
    facet_grid(~loop,scales = "free_x", space="free")+ theme(plot.margin=unit(c(2,0,0,2),"mm"),axis.title.x=element_blank(),axis.title.y=element_blank(),axis.text.x=element_blank(),axis.ticks.x = element_blank()) +scale_fill_manual("Legend", values = col_vector)+ theme(legend.position = "none")
})










p=grid.arrange(arrangeGrob(legend, ncol=1, nrow=1),  widths=c(1))
file_name="./proline_classifier/Plots/member_distribution.pdf"
ggsave(p,file=file_name, width=96,height=28,units = c( "mm"))
