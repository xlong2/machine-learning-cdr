all_combn=as.data.frame(t(all_combn))
all_names=names(all_significance_simulation[[loop]])
all_errors=lapply(all_combn,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
the_mean=mean(all_significance_simulation[[loop]][[x]])
return(the_mean)
}else{
return(NA)
}
})
simulated_error_average=as.data.frame(cbind(t(all_combn),as.numeric(unlist(all_errors))))
simulated_error_average$V3=as.numeric(as.character(simulated_error_average$V3))
accuracy=sum(simulated_error_average[simulated_error_average$Var1==simulated_error_average$Var2,3])/sum(simulated_error_average[,3])
average_accuracy_from_simulation[[loop]]=accuracy
}
average_accuracy_from_simulation
loop
loop="L2_12"
clusters=unique(data_by_loop_type_list_unduplicated[[loop]][[1]]$cluster_type)
clusters=gsub("\\*","none",clusters)
all_combn=expand.grid(clusters,clusters)
all_combn=as.data.frame(t(all_combn))
all_names=names(all_significance_simulation[[loop]])
all_errors=lapply(all_combn,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
the_mean=mean(all_significance_simulation[[loop]][[x]])
return(the_mean)
}else{
return(NA)
}
})
simulated_error_average=as.data.frame(cbind(t(all_combn),as.numeric(unlist(all_errors))))
simulated_error_average$V3=as.numeric(as.character(simulated_error_average$V3))
accuracy=sum(simulated_error_average[simulated_error_average$Var1==simulated_error_average$Var2,3])/sum(simulated_error_average[,3])
average_accuracy_from_simulation[[loop]]=accuracy
accuracy
simulated_error_average
all_combn
all_combn[all_combn[1,]==all_combn[2,],]
all_combn[,lapply(all_combn[1,]==all_combn[2,])]
all_combn[,unlist(lapply(all_combn[1,]==all_combn[2,]))]
all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
all_s=all_significance_simulation[[loop]]
lapply(all_significance_simulation[[loop]],function(x){x[1]})
similar
similar=all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
similar
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}else{
return(0)
}
})
correct_num
do.call(correct_num,sum)
do.call("+", correct_num)
lapply(correct_num,length)
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
correct_num
correct_num
similar
sd(correct_num_sum/all_num)
correct_num_sum=do.call("+", correct_num)
sd(correct_num_sum/all_num)
correct_num
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
correct_num_sum=do.call("+", correct_num)
sd(correct_num_sum/all_num)
all_num=sum(lapply(all_significance_simulation[[loop]],function(x){x[1]}))
similar=all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
all_num
lapply(all_significance_simulation[[loop]],function(x){x[1]})
all_num=sum(unlist(lapply(all_significance_simulation[[loop]],function(x){x[1]})))
all_num
similar=all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
correct_num
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
correct_num_sum=do.call("+", correct_num)
correct_num_sum
sd(correct_num_sum/all_num)
sd
accuracy_sd=sd(correct_num_sum/all_num)
accuracy_sd
accuracy_sd = sd(correct_num_sum/all_num)
all_errors=lapply(all_combn,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
the_mean=mean(all_significance_simulation[[loop]][[x]])
return(the_mean)
}else{
return(NA)
}
})
simulated_error_average=as.data.frame(cbind(t(all_combn),as.numeric(unlist(all_errors))))
simulated_error_average$V3=as.numeric(as.character(simulated_error_average$V3))
accuracy=sum(simulated_error_average[simulated_error_average$Var1==simulated_error_average$Var2,3])/sum(simulated_error_average[,3])
average_accuracy_from_simulation[[loop]]=accuracy
sd_from_simulation[[loop]]=sd
sd_from_simulation=list()
for(loop in names(data_by_loop_type_list_unduplicated)){
clusters=unique(data_by_loop_type_list_unduplicated[[loop]][[1]]$cluster_type)
clusters=gsub("\\*","none",clusters)
all_combn=expand.grid(clusters,clusters)
all_combn=as.data.frame(t(all_combn))
all_names=names(all_significance_simulation[[loop]])
all_s=all_significance_simulation[[loop]]
all_num=sum(unlist(lapply(all_significance_simulation[[loop]],function(x){x[1]})))
similar=all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
correct_num_sum=do.call("+", correct_num)
accuracy_sd = sd(correct_num_sum/all_num)
all_errors=lapply(all_combn,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
the_mean=mean(all_significance_simulation[[loop]][[x]])
return(the_mean)
}else{
return(NA)
}
})
simulated_error_average=as.data.frame(cbind(t(all_combn),as.numeric(unlist(all_errors))))
simulated_error_average$V3=as.numeric(as.character(simulated_error_average$V3))
accuracy=sum(simulated_error_average[simulated_error_average$Var1==simulated_error_average$Var2,3])/sum(simulated_error_average[,3])
average_accuracy_from_simulation[[loop]]=accuracy
sd_from_simulation[[loop]]=sd
}
clusters=unique(data_by_loop_type_list_unduplicated[[loop]][[1]]$cluster_type)
clusters=gsub("\\*","none",clusters)
all_combn=expand.grid(clusters,clusters)
all_combn=as.data.frame(t(all_combn))
all_names=names(all_significance_simulation[[loop]])
all_s=all_significance_simulation[[loop]]
all_num=sum(unlist(lapply(all_significance_simulation[[loop]],function(x){x[1]})))
similar=all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
correct_num_sum=do.call("+", correct_num)
correct_num
do.call("+", correct_num)
correct_num[[1]]+correct_num[[2]]
starter=correct_num[[1]]
for(ind in 2:length(correct_num)){
starter=starter+correct_num[[ind]]
}
starter=correct_num[[1]]
for(ind in 2:length(correct_num)){
starter=starter+correct_num[[ind]]
}
starter
accuracy_sd = sd(correct_num_sum/all_num)
accuracy_sd
average_accuracy_from_simulation=list()
sd_from_simulation=list()
for(loop in names(data_by_loop_type_list_unduplicated)){
clusters=unique(data_by_loop_type_list_unduplicated[[loop]][[1]]$cluster_type)
clusters=gsub("\\*","none",clusters)
all_combn=expand.grid(clusters,clusters)
all_combn=as.data.frame(t(all_combn))
all_names=names(all_significance_simulation[[loop]])
all_s=all_significance_simulation[[loop]]
all_num=sum(unlist(lapply(all_significance_simulation[[loop]],function(x){x[1]})))
similar=all_combn[,unlist(lapply(all_combn,function(x){x[1]==x[2]}))]
correct_num=  lapply(similar,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
correct=all_significance_simulation[[loop]][[x]]
return(correct)
}
})
starter=correct_num[[1]]
for(ind in 2:length(correct_num)){
starter=starter+correct_num[[ind]]
}
accuracy_sd = sd(correct_num_sum/all_num)
all_errors=lapply(all_combn,function(x){
x=paste(unlist(x),collapse="")
#print(possible_ids)
if( any(x %in% all_names)){
the_mean=mean(all_significance_simulation[[loop]][[x]])
return(the_mean)
}else{
return(NA)
}
})
simulated_error_average=as.data.frame(cbind(t(all_combn),as.numeric(unlist(all_errors))))
simulated_error_average$V3=as.numeric(as.character(simulated_error_average$V3))
accuracy=sum(simulated_error_average[simulated_error_average$Var1==simulated_error_average$Var2,3])/sum(simulated_error_average[,3])
average_accuracy_from_simulation[[loop]]=accuracy
sd_from_simulation[[loop]]=accuracy_sd
}
sd_from_simulation
data.frame(average_accuracy_from_simulation,sd_from_simulation)
data.frame(accuracy=average_accuracy_from_simulation,sd=sd_from_simulation)
average_accuracy_from_simulation
rbind(accuracy=average_accuracy_from_simulation,sd=sd_from_simulation)
cbind(accuracy=average_accuracy_from_simulation,sd=sd_from_simulation)
random_acc_sd=cbind(accuracy=average_accuracy_from_simulation,sd=sd_from_simulation)
save_file("random_acc_sd")
random_acc_sd
p1
random_acc_sd
random_acc_sd[complete.cases(random_acc_sd),]
random_acc_sd[complete.cases(random_acc_sd),]
complete.cases(random_acc_sd)
random_acc_sd=as.data.frame(cbind(accuracy=average_accuracy_from_simulation,sd=sd_from_simulation))
random_acc_sd[complete.cases(random_acc_sd),]
random_acc_sd
random_acc_sd[!is.na(random_acc_sd),]
random_acc_sd
random_acc_sd[!rownames(random_acc_sd)%in%c("H2_12","L1_17"),]
random_acc_sd = as.data.frame(cbind(accuracy=average_accuracy_from_simulation,sd=sd_from_simulation))
random_acc_sd = random_acc_sd[!rownames(random_acc_sd)%in%c("H2_12","L1_17"),]
random_acc_sd
random_acc_sd
random_acc_sd
random_acc_sd
random_acc_sd[!rownames(random_acc_sd)%in%c("H2_12","L1_17"),]
p1
random_acc_sd$loop=split_vector_and_replace(rownames(split_vector_and_replace),"_",1,1,"")
random_acc_sd
random_acc_sd$loop=split_vector_and_replace(rownames(split_vector_and_replace),"_",1,1,"")
random_acc_sd
split_vector_and_replace(rownames(split_vector_and_replace),"_",1,1,"")
rownames(split_vector_and_replace)
random_acc_sd$loop=split_vector_and_replace(rownames(random_acc_sd),"_",1,1,"")
random_acc_sd
random_acc_sd$length=split_vector_and_replace(rownames(random_acc_sd),"_",2,2,"")
random_acc_sd
random_acc_sd_reordered=reorder_factor(random_acc_sd,"loop","length")
random_acc_sd_reordered
random_acc_sd_reordered
blind_blast_cv_result_summary_reordered
blind_blast_cv_result_summary_reordered_selected=blind_blast_cv_result_summary_reordered[,c( "mean" ,    "sd" , "loop", "length")]
blind_blast_cv_result_summary_reordered_selected
random_acc_sd_reordered
random_acc_sd_reordered
blind_blast_cv_result_summary_reordered_selected
blind_blast_cv_result_summary_reordered_selected$method=rep("blindBLAST",dim(blind_blast_cv_result_summary_reordered_selected)[1])
blind_blast_cv_result_summary_reordered_selected
random_acc_sd_reordered
colnames(random_acc_sd_reordered)[1:2]=c("mean","sd")
random_acc_sd_reordered
random_acc_sd_reordered$method=rep("random",dim(random_acc_sd_reordered)[1])
random_acc_sd_reordered
rbind(blind_blast_cv_result_summary_reordered_selected,random_acc_sd_reordered)
combined_blindBLAST_random=rbind(blind_blast_cv_result_summary_reordered_selected,random_acc_sd_reordered)
combined_blindBLAST_random
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colour =method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
combined_blindBLAST_random
combined_blindBLAST_random$sd=as.numeric(combined_blindBLAST_random$sd)
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colour =method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
as.numeric(combined_blindBLAST_random$sd)
combined_blindBLAST_random=as.data.frame(rbind(blind_blast_cv_result_summary_reordered_selected,random_acc_sd_reordered))
combined_blindBLAST_random$sd=as.numeric(combined_blindBLAST_random$sd)
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colour =method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
combined_blindBLAST_random$max=combined_blindBLAST_random$mean+combined_blindBLAST_random$sd/2
combined_blindBLAST_random$sd/2
combined_blindBLAST_random$mean+combined_blindBLAST_random$sd/2
combined_blindBLAST_random$mean-combined_blindBLAST_random$sd/2
combined_blindBLAST_random$mean
combined_blindBLAST_random
combined_blindBLAST_random$mean=as.numeric(combined_blindBLAST_random$mean)
combined_blindBLAST_random$min=combined_blindBLAST_random$mean-combined_blindBLAST_random$sd/2
combined_blindBLAST_random$max=combined_blindBLAST_random$mean+combined_blindBLAST_random$sd/2
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colours=method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colour=method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
p1
grids=list()
grids[[1]]=p1
grids[[2]]=the_plot
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(2,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(3,2) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colour=method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+ theme(legend.position=c(.8, .8))
options(digits = 2)
grids=list()
grids[[1]]=p1
grids[[2]]=the_plot
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(3,2) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
the_plot
p1
p1=ggplot(combined_blindBLAST_random,
aes(
x = length,
y = mean,
ymin = mean - sd / 2,
ymax = mean + sd / 2,colour=method
)) + geom_errorbar(stat = "identity") + facet_grid(~loop,scales="free",space="free")+geom_point() + theme_classic()+
theme(plot.title = element_text(hjust = 0.5))+ theme(legend.position=c(.8, .8),axis.title.x=element_blank())
p1
grids=list()
grids[[1]]=p1
grids[[2]]=the_plot
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(3,2) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
save_figure_specific_size(p,"blindBLAST_corrected_with_accuracy_rmsdplot.pdf",7,7)
combined_blindBLAST_random
figure_error_count
p1
fig
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = high,fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+ylim(0.5, 1)+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
fig
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = high,fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+ylim(0.5, 1)+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = high,fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
fig
fig=fig+scale_y_continuous(limits=c(0.5,1),position = "right")
fig
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = high,fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
fig=fig+scale_y_continuous(limits=c(0.5,1),oob = rescale_none,position = "right")
fig
library(scales)
fig=fig+scale_y_continuous(limits=c(0.5,1),oob = rescale_none,position = "right")
fig
library("scales")
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
grids=list()
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = high,fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
fig=fig+scale_y_continuous(limits=c(0.5,1.1),oob = rescale_none,position = "right")
grids=list()
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = high,fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
grids=list()
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
fig=fig+scale_y_continuous(limits=c(0.5,1.05),oob = rescale_none,position = "right")
grids=list()
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = pmax(high,1),fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
error_count_list=list();
fig=fig+scale_y_continuous(limits=c(0.5,1.05),oob = rescale_none,position = "right")
grids=list()
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
fig=ggplot(accuracy_sd_gbm_blast_remove_unknow_melt,aes(x=length,y=value,ymin = low , ymax = pmin(high,1),fill=variable))+geom_bar(
stat = "identity" ,position=position_dodge(width = 0.90))+
geom_errorbar(position = position_dodge(0.9))+
theme_classic()+theme(plot.title = element_text(hjust = 0.5),legend.position = c(0.9,0.9))+
xlab("")+facet_grid(~loop,scales="free",space="free")+
theme(text = element_text(size=11), axis.text.x = element_text(angle=90, hjust=1),axis.text.y = element_text(angle=90, hjust=1))
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
fig=fig+scale_y_continuous(limits=c(0.5,1.05),oob = rescale_none,position = "right")
grids=list()
grids[[1]]=figure_error_count
grids[[2]]=fig
p=grid.arrange(arrangeGrob(grids[[1]],grids[[2]], ncol=1, nrow=2, heights=c(1,1) ,bottom=textGrob("wrong prediction type", gp=gpar(fontsize=14))  ))
save_figure_specific_size(p,"gbm_blindBLAST_accuracy_and_error_count.pdf",7,7)
data_by_loop_type_list_unduplicated[["L3_10"]]
data_by_loop_type_list_unduplicated[["L3_10"]][[1]]
dim(data_by_loop_type_list_unduplicated[["L3_10"]][[1]])
dim(data_by_loop_type_list_unduplicated[["L3_9"]][[1]])
dim(data_by_loop_type_list_unduplicated[["H2_10"]][[1]])
